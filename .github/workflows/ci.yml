name: Continuous integration

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: 'surrealdb/surrealdb'

      - name: Cache cargo assets
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-test-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: 'surrealdb/surrealdb'

      - name: Cache cargo assets
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-lint-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -W warnings

  build:
    if: startsWith(github.event.ref, 'refs/tags')
    name: Build ${{ matrix.arch }}
    needs: [test, lint]
    strategy:
      matrix:
        include:
          - arch: x86_64-apple-darwin
            os: macos-latest
            file: surreal-${{ github.ref_name }}.darwin-amd64
            opts: --features storage-tikv
          - arch: aarch64-apple-darwin
            os: macos-latest
            file: surreal-${{ github.ref_name }}.darwin-arm64
            opts: --features storage-tikv
          - arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            file: surreal-${{ github.ref_name }}.linux-amd64
            opts: --features storage-tikv,storage-fdb
          - arch: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            file: surreal-${{ github.ref_name }}.linux-arm64
            opts: --features storage-tikv
          - arch: x86_64-pc-windows-gnu
            os: windows-latest
            file: surreal-${{ github.ref_name }}.windows-amd64
            opts:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          repository: 'surrealdb/surrealdb'

      - name: Cache cargo assets
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.arch }}-build-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Prepare environment
        if: contains(matrix.arch, 'windows') && endsWith(matrix.arch, '-gnu')
        run: echo "C:\msys64\usr\bin;$Env:Path" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Install dependencies
        if: contains(matrix.arch, 'windows') && endsWith(matrix.arch, '-msvc')
        run: |
          vcpkg integrate install
          vcpkg install openssl:x64-windows-static

      - name: Install dependencies
        if: contains(matrix.arch, 'linux') && endsWith(matrix.arch, '-gnu')
        run: |
          sudo apt-get -y update
          sudo apt-get -y install musl-tools qemu-user libc6-dev-arm64-cross
          sudo apt-get -y install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu

      - name: Install FoundationDB
        if: contains(matrix.arch, 'linux') && startsWith(matrix.arch, 'x86_64')
        run: |
          curl -sLO https://github.com/apple/foundationdb/releases/download/6.3.23/foundationdb-clients_6.3.23-1_amd64.deb
          dpkg -i --force-architecture foundationdb-clients_6.3.23-1_amd64.deb
          rm -rf foundationdb-clients_6.3.23-1_amd64.deb

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}

      - name: Output package versions
        run: go version ; cargo version ; rustc --version ; cmake --version ; gcc --version ; g++ --version ; perl -v

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.opts }} --release --locked --target ${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.file }}
          path: |
            target/${{ matrix.arch }}/release/surreal
            target/${{ matrix.arch }}/release/${{ matrix.file }}.tgz
            target/${{ matrix.arch }}/release/${{ matrix.file }}.txt
            target/${{ matrix.arch }}/release/${{ matrix.file }}.exe
